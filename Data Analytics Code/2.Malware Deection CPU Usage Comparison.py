import os
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

def analyze_malware_plots(
    input_csv: str = "cybersecurity_game/data/Malware Attack Patterns/Institutional/Malware Detection  dataset/malware_final_validated.csv",
    output_dir: str = "cybersecurity_game/docs/Data Analytics Results"
):
    os.makedirs(output_dir, exist_ok=True)

# Load data
    df = pd.read_csv(input_csv)

    # 1) Box Plot
    plt.figure(figsize=(6, 4))
    sns.boxplot(data=df, x='label', y='cpu_total')
    plt.title('Malware Dataset: CPU Usage by Label (Box Plot)')
    plt.xlabel('Label (0=Benign, 1=Malicious)')
    plt.ylabel('CPU Total Usage')
    plt.tight_layout()

    boxplot_path = os.path.join(output_dir, "Malware_CPU_BoxPlot.png")
    plt.savefig(boxplot_path, dpi=300)
    plt.show()
    plt.close()
    print(f"Box plot saved to: {boxplot_path}")

    # 2) Violin Plot
    plt.figure(figsize=(6, 4))
    sns.violinplot(data=df, x='label', y='cpu_total', inner='box')
    plt.title('Malware Dataset: CPU Usage by Label (Violin Plot)')
    plt.xlabel('Label (0=Benign, 1=Malicious)')
    plt.ylabel('CPU Total Usage')
    plt.tight_layout()

    violin_path = os.path.join(output_dir, "Malware_CPU_ViolinPlot.png")
    plt.savefig(violin_path, dpi=300)
    plt.show()
    plt.close()
    print(f"Violin plot saved to: {violin_path}")

    # 3) Strip Plot (replacing swarm)
    plt.figure(figsize=(6, 4))
    sns.stripplot(data=df, x='label', y='cpu_total', jitter=True, size=2)
    plt.title('Malware Dataset: CPU Usage by Label (Strip Plot)')
    plt.xlabel('Label (0=Benign, 1=Malicious)')
    plt.ylabel('CPU Total Usage')
    plt.tight_layout()

    strip_path = os.path.join(output_dir, "Malware_CPU_StripPlot.png")
    plt.savefig(strip_path, dpi=300)
    plt.show()
    plt.close()
    print(f"Strip plot saved to: {strip_path}")

if __name__ == "__main__":
    analyze_malware_plots()

